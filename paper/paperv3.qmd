---
title: "Reproduction frequency and offspring survival decline in elephant seals past prime age"
format: 
  html: 
    echo: false
    fig-width: 5
    fig-height: 5
    code-fold: true
    code-tools: true
    warning: false
editor: visual
bibliography: references.bib
---

```{r}
#| label: setup
#| include: false  
library(ggthemes)
library(cowplot)
library(lme4)
library(lmerTest) # Loading this library will automatically append p-values to lmer models estimated using something called Satterthwaite's method
library(merTools)
library(tidyverse)
library(ggeffects)
library(ggridges)
library(patchwork)
source(here::here("R/format.R"))
theme_set(theme_few(base_size = 13))

age_senesce <- 11

sealdat <- read_csv(here::here("data/raw/128L pull 2023_12_05.csv"), 
                    show_col_types = FALSE) %>% 
  mutate(observed = if_else(observed == "B", "Breeder", "Non-breeder"), 
         observed_int = if_else(observed == "Breeder", 1, 0), 
         pup_survived = pupseeneveragain > 0) %>% 
  filter(age > 3, 
         year > 1987) %>% 
  mutate(animalID = factor(animalID),
         year_fct = factor(year),
         age10 = age / 10,
         age_cat = factor(age >= age_senesce, 
                          labels = c("Young", "Old"))) %>% 
  group_by(animalID) %>% 
  mutate(longevity = ifelse(max(year) < 2020,
                            max(age),
                            NA),
         longevity10 = longevity / 10,
         recruit_age = ifelse(max(year) < 2020 && any(observed_int == 1),
                              min(age[observed_int == 1]),
                              NA)) %>% 
  ungroup()

resight <- read.csv(here::here("data/raw/fullresights.csv")) %>% 
  select(animalID, resightID, season, date, timeofyear, calyear, yday) %>% 
  mutate(animalID = as.factor(animalID))

```

# Introduction

Our hypotheses:

1.  Elephant seal reproductive success declines with age.

2.  Reproductive declines persist to the next generation (maternal effect senescence).Â That is, offspring survival and reproduction decrease with maternal age.

3.  Offspring sex ratios shift towards males with old age.

4.  Phenology (breeding haulout and molt haulout) is shifted later for older animals and breeders.

# Results

n = `r n_distinct(sealdat$animalID)` distinct animals, with `r n_distinct(sealdat)` total observations.

### Raw data

```{r}
#| label: fig-raw-data
#| fig-width: 9
#| fig-cap: "A: Raw longitudinal data for 1,202 known-age female elephant seals and their observations from birth, to recruitment, to death. B: Histogram of the number of seals in each age class in the dataset."

sighting_img <- sealdat %>% 
  group_by(animalID) %>% 
  summarize(yearborn = yearborn[1],
            first_obs = min(year),
            last_obs = max(year),
            .groups = "keep") %>% 
  reframe(yearborn = yearborn,
          year = yearborn:last_obs,
          age = year - yearborn,
          prerecruit = year < first_obs) %>% 
  filter(year > 1987) %>% 
  left_join(sealdat %>% 
              group_by(animalID, year) %>% 
              summarize(observed_int = max(observed_int),
                        .groups = "drop"),
            by = c("animalID", "year")) %>% 
  mutate(
    observed = case_when(
      age == 0 ~ "Born",
      prerecruit ~ "Pre-recruit",
      observed_int == 0 ~ "Non-breeder",
      observed_int == 1 ~ "Breeder",
      is.na(observed_int) ~ "Unobserved"
    ),
    observed = factor(observed, levels = c("Born",
                                           "Pre-recruit",
                                           "Non-breeder",
                                           "Breeder",
                                           "Unobserved"))
  ) %>% 
  group_by(animalID) %>% 
  mutate(longevity = max(age),
         yearborn = na.omit(yearborn)[1]) %>% 
  ungroup() %>% 
  arrange(yearborn, longevity, animalID) %>% 
  mutate(animalID = factor(animalID, levels = unique(animalID))) %>% 
  ggplot(aes(year, animalID)) +
  geom_raster(aes(fill = observed)) +
  scale_fill_viridis_d(direction = -1) +
  guides(fill = guide_legend(position = "inside", 
                             direction = "horizontal",
                             ncol = 1,
                             byrow = TRUE)) +
  labs(y ="Individual") +
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.title.x = element_blank(),
        legend.title = element_blank(),
        # legend.position.inside = c(0.01, 0.99),
        legend.justification = c(0, 1),
        legend.background = element_blank(),
        legend.key.size = unit(4, "mm"),
        legend.text = element_text(size = 8))

age_dist <- sealdat %>% 
  filter(age < 22) %>% 
  group_by(age) %>% 
  count(age) %>% 
  ggplot(aes(x = age, y = n)) + 
  geom_col(fill = "grey50") + 
  labs(x = "Age (Years)", y = "Number of individuals") + 
  theme()

(sighting_img | age_dist) + plot_layout(widths = c(2, 1)) + plot_annotation(tag_levels = "A")

```

### H1: Reproductive senescence

We predicted that breeding success would decline with age. Based on the literature, we chose age `r age_senesce` to be the end of prime age and indicate the onset of senescence. If breeding success declined with age, we would expect to see a negative difference between the slopes of the two models (pre and post senescence) (@fig-breeding-mod).

```{r}
#| label: breeding-mod

# Fit GLMMs to the data with binary variable indicating before and after onset # of senescence. We a priori chose age 11 for senescence (age_senesce).
breed_age_mod <- glmer(
  observed_int ~ age10 * age_cat + (1 | animalID) + (1 | year_fct),
  sealdat,
  family = "binomial",
  control = glmerControl(optimizer = "bobyqa")
)

summary(breed_age_mod)$coefficients

```

```{r}
#| label: fig-breeding-mod
#| fig-cap: "Breeding rates increased until age 10, then decreased from age 11 on. Black points represent mean and standard error of the observed breeding rates. The solid lines and shaded areas represent the mean and 95% confidence interval of the population-level model predictions. The observed data are unequally distributed across years, so the dashed lines indicate the predicted breeding rates averaged over years (i.e., including the random effect of year), weighted by the number of seals observed in each year."

# Summarize the raw data
breed_nonbreed <- sealdat %>% 
  group_by(age) %>% 
  summarize(n_observed = n(), 
            perc_breed = sum(observed_int) / n_observed, 
            se = (perc_breed * (1 - perc_breed) / n_observed)^0.5) %>% 
  filter(age <= 20)

# Create POPULATION-LEVEL (i.e. without rand effects) predictions
breed_pred_pop <- ggpredict(breed_age_mod, 
                            terms = c("age10 [all]", "age_cat")) %>% 
  as_tibble() %>% 
  mutate(age = x * 10,
         age_cat = factor(group, levels = c("Young", "Old"))) %>% 
  filter((age_cat == "Young" & age < age_senesce) |
           (age_cat == "Old" & age >= age_senesce),
         age <= 20)

# Create WEIGHTED-AVERAGE predictions using years' random effects
seal_years <- count(sealdat, year_fct)
breed_pred_wgt <- ggpredict(
  breed_age_mod,
  terms = c("age10 [all]", "age_cat", "year_fct [all]"),
  type = "random",
  interval = "confidence"
) %>% 
  as_tibble() %>% 
  mutate(age = x * 10,
         age_cat = group,
         year_fct = facet) %>% 
  filter((age_cat == "Young" & age < age_senesce) |
           (age_cat == "Old" & age >= age_senesce),
         age <= 20) %>% 
  left_join(seal_years, by = "year_fct") %>% 
  group_by(age, age_cat) %>% 
  summarize(predicted = weighted.mean(predicted, n),
            .groups = "drop")
  
ggplot(breed_pred_pop, aes(age, predicted)) +
  geom_ribbon(aes(fill = age_cat, ymin = conf.low, ymax = conf.high), 
              alpha = 0.2) +
  geom_line(aes(color = age_cat), linewidth = 1.2) +
  geom_line(aes(color = age_cat),
            breed_pred_wgt, 
            linewidth = 1.2,
            linetype = "dashed") +
  geom_pointrange(aes(y = perc_breed, 
                      ymin = perc_breed - se, 
                      ymax = perc_breed + se),
                  breed_nonbreed) +
  geom_vline(xintercept = age_senesce - 0.5, linetype = "dashed") +
  scale_y_continuous("Breeding", labels = scales::percent) +
  scale_color_manual(values = c("#7fbc41", "#de77ae")) +
  scale_fill_manual(values = c("#7fbc41", "#de77ae")) +
  labs(x = "Age (years)") +
  theme(legend.position = "none")

```

Sample size n = `r nrow(sealdat)` observations of `r n_distinct(sealdat$animalID)` individuals.

### H2: Maternal effect senescence

We predicted that reproductive declines would carry over to the next generation - that is, pups born to older mothers would have decreased survival (for female and male pups) and reproductive success (for female pups). Pup survival significantly decreased with maternal age, but pup reproduction did not (@fig-repro-age).

```{r}
#| label: repro-age

# Isolate pup survival/recruitment 
surv_recr_data <- sealdat %>% 
  drop_na(pupID) %>% 
  # Only pups born 2016 or earlier (otherwise survival biased)
  filter(pupyearborn <= 2016) %>% 
  mutate(pup_surv_int = as.integer(pup_survived),
         pup_recr_int = as.integer(puprecruited)) 

# Fit pup *survival* model
pup_surv_mod <- glmer(
  pup_surv_int ~ age10 * age_cat + (1 | animalID) + (1 | year_fct),
  surv_recr_data,
  family = "binomial",
  control = glmerControl(optimizer = "bobyqa")
)

# Fit pup *recruitment* model (female offspring only)
pup_recr_mod <- glmer(
  # NOTE: no random effect for individual bc singular fit
  # In survival model, 93 individuals (15%) had >3 pups (male+female pups)
  # In recruit model, only 17 individuals (4%) had >3 pups (female pups only)
  pup_recr_int ~ age10 * age_cat + (1 | year_fct),
  filter(surv_recr_data, pupsex == "F"),
  family = "binomial",
  control = glmerControl(optimizer = "bobyqa")
)

"Survival"
summary(pup_surv_mod)$coefficients
"Recruitment"
summary(pup_recr_mod)$coefficients

```

```{r}
#| label: fig-repro-age
#| fig-width: 9

n_recruit <- surv_recr_data %>% 
  filter(pupsex == "F")

# Summarize the raw data
surv_recr_summ <- surv_recr_data %>% 
  group_by(age) %>% 
  summarize(n_pups = n(), 
            n_fpups = sum(pupsex == "F"),
            perc_surv = sum(pup_surv_int) / n_pups, 
            se_surv = (perc_surv * (1 - perc_surv) / n_pups)^0.5,
            perc_recr = sum(pup_recr_int) / n_fpups, 
            se_recr = (perc_recr * (1 - perc_recr) / n_fpups)^0.5) %>% 
  filter(age <= 20)

# Create pup survival POPULATION-LEVEL (i.e. without rand effects) predictions
surv_pred_pop <- ggpredict(
  pup_surv_mod, 
  terms = c("age10 [all]", "age_cat"),
  type = "fixed",
  interval = "confidence"
) %>% 
  as_tibble() %>% 
  mutate(age = x * 10,
         age_cat = group) %>% 
  filter((age_cat == "Young" & age < age_senesce) |
           (age_cat == "Old" & age >= age_senesce),
         age <= 20)
  
fig_surv <- ggplot(surv_pred_pop, aes(age, predicted)) +
  geom_ribbon(aes(fill = age_cat, ymin = conf.low, ymax = conf.high), 
              alpha = 0.2) +
  geom_line(aes(color = age_cat), linewidth = 1.2) +
  geom_pointrange(aes(y = perc_surv, 
                      ymin = perc_surv - se_surv, 
                      ymax = perc_surv + se_surv),
                  surv_recr_summ) +
  geom_vline(xintercept = age_senesce - 0.5, linetype = "dashed") +
  scale_y_continuous("Offspring survival", 
                     labels = scales::percent,
                     limits = c(0, 0.62)) +
  scale_color_manual(values = c("#7fbc41", "#de77ae")) +
  scale_fill_manual(values = c("#7fbc41", "#de77ae")) +
  labs(x = "Age (years)") +
  theme(legend.position = "none")

# Create pup recruit POPULATION-LEVEL (i.e. without rand effects) predictions
recr_pred_pop <- ggpredict(
  pup_recr_mod, 
  terms = c("age10 [all]", "age_cat"),
  type = "fixed",
  interval = "confidence"
) %>% 
  as_tibble() %>% 
  mutate(age = x * 10,
         age_cat = group) %>% 
  filter((age_cat == "Young" & age < age_senesce) |
           (age_cat == "Old" & age >= age_senesce),
         age <= 20)
  
fig_recr <- ggplot(recr_pred_pop, aes(age, predicted)) +
  geom_ribbon(aes(fill = age_cat, ymin = conf.low, ymax = conf.high), 
              alpha = 0.2) +
  geom_line(aes(color = age_cat), linewidth = 1.2) +
  geom_pointrange(aes(y = perc_recr, 
                      ymin = perc_recr - se_recr, 
                      ymax = perc_recr + se_recr),
                  surv_recr_summ) +
  geom_vline(xintercept = age_senesce - 0.5, linetype = "dashed") +
  scale_y_continuous("Offspring recruitment", 
                     labels = scales::percent,
                     limits = c(0, 0.62)) +
  scale_color_manual(values = c("#7fbc41", "#de77ae")) +
  scale_fill_manual(values = c("#7fbc41", "#de77ae")) +
  labs(x = "Age (years)") +
  theme(legend.position = "none")

(fig_surv | fig_recr) + plot_annotation(tag_levels = "A")
  
```

Sample size for offspring survival was n = `r nrow(surv_recr_data)` observations of `r n_distinct(surv_recr_data$animalID)` individuals. Sample size for offspring recruitment was n = `r nrow(n_recruit)` observations of `r n_distinct(n_recruit$animalID)` female individuals.

### H3: Changes in pup sex ratio with increased maternal age

We found that as maternal age increases, pup sex skews slightly towards males, but it is not significant (@fig-sex_ratio).

```{r}
#| label: sex-ratio

pup_sex_data <- sealdat %>% 
  filter(pupsex %in% c("M", "F"), 
         age < 19) %>% 
  mutate(is_male = as.integer(pupsex == "M"))

sexrat_age_mod <- glmer(
  is_male ~ age10 * age_cat + (1 | animalID) + (1 | year_fct),
  pup_sex_data,
  family = "binomial"
)

summary(sexrat_age_mod)$coefficients

```

```{r}
#| label: fig-sex-ratio
#| fig-cap: "Offspring sex ratio skews towards males with increasing maternal age, but the result is not significant (p = 0.6). Black points show the mean and solid black lines show the standard error of the observed sex ratio."

# Summarize the raw data
sexrat_summ <- pup_sex_data %>% 
  group_by(age) %>% 
  summarize(n_observed = n(), 
            perc_male = mean(is_male), 
            se = (perc_male * (1 - perc_male) / n_observed)^0.5) %>% 
  filter(age <= 20)

# Create POPULATION-LEVEL (i.e. without rand effects) predictions
sexrat_pred <- ggpredict(sexrat_age_mod, 
                         terms = c("age10 [all]", "age_cat")) %>% 
  as_tibble() %>% 
  mutate(age = x * 10,
         age_cat = factor(group, levels = c("Young", "Old"))) %>% 
  filter((age_cat == "Young" & age < age_senesce) |
           (age_cat == "Old" & age >= age_senesce))

ggplot(sexrat_pred, aes(age, predicted)) +
  geom_ribbon(aes(fill = age_cat, ymin = conf.low, ymax = conf.high), 
              alpha = 0.2) +
  geom_line(aes(color = age_cat), linewidth = 1.2) +
  geom_pointrange(aes(y = perc_male, 
                      ymin = perc_male - se, 
                      ymax = perc_male + se),
                  sexrat_summ) +
  geom_vline(xintercept = age_senesce - 0.5, linetype = "dashed") +
  scale_color_manual(values = c("#7fbc41", "#de77ae")) +
  scale_fill_manual(values = c("#7fbc41", "#de77ae")) +
  scale_y_continuous("Male offspring", labels = scales::percent) +
  labs(x = "Age (years)") +
  theme(legend.position = "none")
```

Sample size n = `r nrow(pup_sex_data)` observations of `r n_distinct(pup_sex_data$animalID)` individuals.

**Note**: In the above figure, the population-level and weighted-average would lie directly on top of each other, so we've excluded the weighted average. This is because the random effect of year has very little impact on offspring sex ratio, which makes sense biologically. It's easy to imagine scenarios where reproduction would vary year-to-year, but harder to think of a mechanism linking year and offspring sex ratio.

### Phenology

Does the timing of breeding and molting suggest a mechanistic explanation for observed patterns in reproductive and maternal-effect senescence?

We fit a generalized linear mixed-effects model with the duration of a phase (molting or breeding) as the response variable and age, interacting with phase, as the predictor, using year as a random effect. We attempted to fit a model with random effects for both year and individual, but that failed to converge. We assumed the effect of year on phase duration (molting or breeding) was greater than the effect of individual, so we retained year as the random effect.

$$
\begin{align}
d &\sim NB(\mu, k) \\
\mu &= exp(\eta) \\
\eta &= \beta_0 + \beta_p * a + Zy
\end{align}
$$

Where: $d$ is the duration of the phase in days, $NB$ is the negative binomial distribution with location $\mu$ and dispersion $k$, $\eta$ is the linear predictor, $\beta_0$ is the intercept, $\beta_p$ is the coefficient for age ($a$) by phase (i.e., for $p$ in "molting" or "breeding"), $y$ is the year, and $Z$ is the design matrix relating $y$ to $\eta$.

```{r}
#| label: pheno-model

seal_phenology <- sealdat %>% 
  mutate(BA = firstobsbreeddoy, 
         BD = firstobsbreeddoy + breeddur, 
         MA = lastobsmoltdoy - moltdur, 
         MD = lastobsmoltdoy) %>% 
  drop_na(age, BA, BD, MA, MD)

pheno_model <- seal_phenology %>% 
  transmute(animalID, year, age10 = age / 10, moltdur, breeddur) %>% 
  pivot_longer(moltdur:breeddur, 
               names_to = "phase", 
               values_to = "dur_days") %>% 
  glmer.nb(dur_days ~ age10:phase + (1 | year), 
           data = .)

summary(pheno_model)

```

```{r}
#| label: fig-pheno
#| fig-cap: "Molting gets shorter but breeding doesn't. A: Observed annual time allocation averaged over individuals. B: Raw data for breeding and molting durations (mean Â± se) and predictions (mean and 95% CI) from negative binomial weighted by number of seals obersved per year."
#| fig-width: 9 

phenology_n <- unique(seal_phenology$animalID)

timing_summary <- seal_phenology %>% 
  group_by(age) %>% 
  summarize(across(BA:MD, mean)) %>% 
  pivot_longer(cols = -age,  
               names_to = "event", 
               values_to = "doy") %>% 
  group_by(age) %>% 
  group_modify(\(data, keys) {
    tibble(event = c("Foraging", "Breeding haulout", "Post-breeding", "Molt haulout", "foraging2"),
           doy = c(data$doy, 365) - c(0, data$doy))
  }) %>% 
  ungroup() %>% 
  mutate(event = factor(event, levels = c("Foraging", 
                                          "Breeding haulout", 
                                          "Post-breeding", 
                                          "Molt haulout", 
                                          "foraging2")))

annual_plot <- ggplot(timing_summary, aes(x = age, y = doy, fill = event)) + 
  geom_area(position = position_stack(reverse = TRUE),
            color = NA) +
  geom_line(position = position_stack(reverse = TRUE),
            color = "white") +
  scale_fill_discrete(
    type = c("#829BD1", "#D05794", "#829BD1", "#E09A2D", "#829BD1"),
    breaks = c("Foraging", "Breeding haulout", "Molt haulout")
  ) + 
  scale_x_continuous("Maternal age (years)", expand = expansion(mult = 0)) +
  scale_y_continuous("Day of year", expand = expansion(mult = 0)) +
  theme(panel.spacing = unit(1, "lines"),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.key.size = unit(3, "mm"))

n_phenology <- seal_phenology %>% 
  count(year)

pheno_raw <- seal_phenology %>% 
  select(breeddur, moltdur, age) %>% 
  pivot_longer(c(breeddur, moltdur), 
               names_to = "phase", 
               values_to = "dur_days") %>% 
  group_by(age, phase) %>% 
  summarize(n = n(),
            dur_days_se = sd(dur_days) / sqrt(n),
            dur_days = mean(dur_days),
            dur_days_lwr = dur_days - dur_days_se,
            dur_days_upr = dur_days + dur_days_se,
            .groups = "drop")

duration_plot <- ggpredict(
  pheno_model, 
  terms = c("age10 [all]", "phase", "year [all]")
) %>% 
  as_tibble() %>% 
  transmute(age = x * 10,
            dur_days = predicted,
            dur_days_lwr = conf.low,
            dur_days_upr = conf.high,
            phase = group,
            year = as.numeric(as.character(facet))) %>% 
  left_join(n_phenology, by = "year") %>% 
  group_by(age, phase) %>% 
  summarize(across(starts_with("dur_days"), \(x) weighted.mean(x, n)),
            .groups = "drop") %>% 
  ggplot(aes(age)) +
  geom_ribbon(aes(ymin = dur_days_lwr, ymax = dur_days_upr, fill = phase),
              alpha = 0.25) +
  geom_pointrange(aes(y = dur_days, 
                      ymin = dur_days_lwr, 
                      ymax = dur_days_upr,
                      color = phase),
                  pheno_raw,
                  position = position_dodge(width = 0.5)) +
  geom_line(aes(y = dur_days, color = phase)) +
  annotate("text", 12, 14, label = "Molting", color = "#E09A2D", hjust = 0) +
  annotate("text", 12, 32, label = "Breeding", color = "#D05794", hjust = 0) +
  scale_fill_manual(values = c("#D05794", "#E09A2D")) +
  scale_color_manual(values = c("#D05794", "#E09A2D")) +
  labs(x = "Maternal age (years)",
       y = "Phase duration (days)") +
  theme(legend.position = "none")

(annual_plot | duration_plot) + plot_annotation(tag_levels = "A") + plot_layout(widths = c(1.25, 2))
  
```

Sample size n = `r nrow(seal_phenology)` observations of `r n_distinct(phenology_n)` individuals.

# Supplemental Material

## Models' sensitivity to age of senescence

```{r}
#| label: mod-sens

fit_models <- function(a) {
  age_senesce <- a
  sealdat <- sealdat %>% 
    mutate(age_cat = factor(age >= age_senesce, 
                            labels = c("Young", "Old")))
  
  # H1
  breed_age_mod <- glmer(
    observed_int ~ age10 * age_cat + (1 | animalID) + (1 | year_fct),
    sealdat,
    family = "binomial",
    control = glmerControl(optimizer = "bobyqa")
  )
  
  # H2
  surv_recr_data <- sealdat %>% 
    drop_na(pupID) %>% 
    filter(pupyearborn <= 2016) %>% 
    mutate(pup_surv_int = as.integer(pup_survived),
           pup_recr_int = as.integer(puprecruited)) 
  
  pup_surv_mod <- glmer(
    pup_surv_int ~ age10 * age_cat + (1 | animalID) + (1 | year_fct),
    surv_recr_data,
    family = "binomial",
    control = glmerControl(optimizer = "bobyqa")
  )
  
  pup_recr_mod <- glmer(
    pup_recr_int ~ age10 * age_cat + (1 | year_fct),
    filter(surv_recr_data, pupsex == "F"),
    family = "binomial",
    control = glmerControl(optimizer = "bobyqa")
  )
  
  # H3
  pup_sex_data <- sealdat %>% 
    filter(pupsex %in% c("M", "F"), 
           age < 19) %>% 
    mutate(is_male = as.integer(pupsex == "M"))
  
  sexrat_age_mod <- glmer(
    is_male ~ age10 * age_cat + (1 | animalID) + (1 | year_fct),
    pup_sex_data,
    family = "binomial"
  )

  list(
    h1 = summary(breed_age_mod)$coefficients,
    h2_surv = summary(pup_surv_mod)$coefficients,
    h2_recr = summary(pup_recr_mod)$coefficients,
    h3 = summary(sexrat_age_mod)$coefficients
  )
}

# Fit models with cut-off at ages 8-13
cutoff <- 8:13
mod_sens <- map(cutoff, fit_models)

# Are hypotheses supported by the model?
extract_p <- \(h) map_dbl(mod_sens, \(m) m[[h]]["age10:age_catOld", "Pr(>|z|)"])
p_tbl <- tibble(age_cutoff = cutoff, 
                "H1 (breeding)" = extract_p("h1"),
                "H2a (survival)" = extract_p("h2_surv"),
                "H2b (recruitment)" = extract_p("h2_recr"),
                "H3 (sex ratio)" = extract_p("h3"))

knitr::kable(p_tbl)

```

```{r}
#| label: fig-mod-sens
#| fig-cap: "Model sensitivity to onset of senescence. Age at onset of senescence on the x-axis, p-value for the coefficient of the interaction (age category = post-senescence) x (response variable) on the y-axis. Statistical significance (p = 0.05) indicated by dashed line. Hypotheses H1 (reproductive senescence), H2b (maternal-effect senescence; offspring recruitment), and H3 (offspring sex ratio) were insensitive to choice of age for onset of senescence. Hypothesis H2a (maternal-effect senescence; offspring survival) was significantly supported for onset of senescence age 11+. At age 10, the p-vale for the coefficient of the interaction (age category = post-senescence) x (offspring survival) was 0.051."

p_tbl %>% 
  pivot_longer(-age_cutoff, names_to = "hypothesis", values_to = "p") %>% 
  ggplot(aes(age_cutoff, p)) +
  geom_point() +
  geom_hline(yintercept = 0.05, linetype = "dashed") +
  scale_y_log10(labels = scales::number) +
  labs(x = "Senescence onset (years)") +
  facet_wrap(~hypothesis)

```

## Haul-out duration by reproductive state

```{r}
#| label: fig-haul-dur

haul_dur <- drop_na(sealdat, breeddur)
haul_summ <- haul_dur %>% 
  group_by(observed) %>% 
  summarize(breeddur_10 = quantile(breeddur, 0.1),
            breeddur_lbl = str_glue("10% < {breeddur_10} days"))
ggplot(haul_dur, aes(breeddur)) +
  geom_density(aes(fill = observed), alpha = 0.5) +
  geom_density(aes(color = observed)) +
  geom_vline(aes(color = observed, xintercept = breeddur_10), 
             haul_summ) +
  geom_text(aes(x = breeddur_10 + 0.5, label = breeddur_lbl), 
            haul_summ, 
            y = 0.09,
            hjust = 0) +
  scale_x_continuous("Haul-out duration (days)", 
                     limits = c(0, 50)) +
  scale_color_manual(values = c("darkgreen", "darkorchid")) +
  scale_fill_manual(values = c("darkgreen", "darkorchid")) +
  theme(legend.position = "none")

```

## Selective appearance and disappearance

```{r}
#| label: selective_values

recruit_by_6 <- mean(sealdat$recruit_age <= 6, na.rm = TRUE)

```

Age-dependent life history shifts can result from within- or between-animal changes [@vandepol2006]. We hypothesized age-dependent changes in reproduction were due to senescence, i.e. within-animal changes. However, it is possible that selective appearance or disappearance of animals in the population can create the same pattern. For example, if animals the breed more frequently have lower survival, then older animals will have lower reproductive traits not because of senescence but rather because only infrequent breeders survive to older ages (i.e. selective disappearance). We tested whether our significant results (reproductive senescence, maternal effect senescence in pup survival) were influenced by selective disappearance, following the methods @vandepol2006, by adding a term for longevity to our models. We did not test for selective appearance because delayed sexual maturity was very rare in this population. `r scales::label_percent(accuracy = 0.1)(recruit_by_6)` of seals recruited at ages 4, 5, or 6.

### H1: Reproductive senescence

```{r}
#| label: sel-dis-h1

breed_sel_dis <- glmer(
  observed_int ~ age10 * age_cat + longevity + (1 | animalID) + (1 | year_fct),
  sealdat,
  family = "binomial",
  control = glmerControl(optimizer = "bobyqa")
)

breed_long_est <- summary(breed_sel_dis)$coefficients["longevity", "Estimate"]
breed_long_se <- summary(breed_sel_dis)$coefficients["longevity", "Std. Error"]
breed_long_coef <- sprintf(
  "%0.5f (95%% CI: %0.5f - %0.5f)", 
  breed_long_est,
  breed_long_est - 1.96 * breed_long_se,
  breed_long_est + 1.96 * breed_long_se
)

breed_long_p <- sprintf(
  "%0.3f", 
  summary(breed_sel_dis)$coefficients["longevity", "Pr(>|z|)"]
)

summary(breed_sel_dis)$coefficients

```

Selective disappearance did not explain the observed pattern of declining breeding probabilities with age. The coefficient for longevity was estimated at `r breed_long_coef`, which was not significantly different than 0 ($p$ = `r breed_long_p`). The predicted breeding probabilities for seals with longevity of 5, 10, and 17 years are shown in @fig-sel-dis-h1.

```{r}
#| label: fig-sel-dis-h1
#| fig-cap: Longevity did not explain changes in breeding probabilities with age. Predicted breeding probabilities for seals with longevity of 5, 10, and 17 years shown with solid, dotted, and dashed lines, respectively. 95% confidence intervals shown in shaded regions.

# Create POPULATION-LEVEL (i.e. without rand effects) predictions
breed_pred_pop <- ggpredict(
  breed_sel_dis, 
  terms = c("age10 [all]", "age_cat", "longevity [5,10,17]")
) %>% 
  as_tibble() %>% 
  mutate(age = x * 10,
         age_cat = factor(group, levels = c("Young", "Old")),
         longevity = facet,
         longevity_fct = factor(longevity)) %>% 
  filter((age_cat == "Young" & age < age_senesce) |
           (age_cat == "Old" & age >= age_senesce),
         age <= 20)
  
ggplot(breed_pred_pop, aes(age, predicted)) +
  geom_ribbon(aes(fill = age_cat, 
                  group = interaction(age_cat, longevity_fct),
                  ymin = conf.low,
                  ymax = conf.high),
              alpha = 0.2) +
  geom_line(aes(color = age_cat, 
                linetype = longevity_fct)) +
  geom_vline(xintercept = age_senesce - 0.5, linetype = "dashed") +
  scale_y_continuous("Breeding", 
                     labels = scales::percent) +
  scale_color_manual(values = c("#7fbc41", "#de77ae")) +
  scale_fill_manual(values = c("#7fbc41", "#de77ae")) +
  labs(x = "Age (years)") +
  theme(legend.position = "none")

```

### H2: Maternal effect senescence

```{r}
#| label: sel-dis-h2

# Fit pup *survival* model
surv_sel_dis <- glmer(
  pup_surv_int ~ age10 * age_cat + longevity + (1 | animalID) + (1 | year_fct),
  surv_recr_data,
  family = "binomial",
  control = glmerControl(optimizer = "bobyqa")
)

surv_long_est <- summary(surv_sel_dis)$coefficients["longevity", "Estimate"]
surv_long_se <- summary(surv_sel_dis)$coefficients["longevity", "Std. Error"]
surv_long_coef <- sprintf(
  "%0.5f (95%% CI: %0.5f - %0.5f)", 
  surv_long_est,
  surv_long_est - 1.96 * surv_long_se,
  surv_long_est + 1.96 * surv_long_se
)

surv_long_p <- sprintf(
  "%0.3f", 
  summary(surv_sel_dis)$coefficients["longevity", "Pr(>|z|)"]
)

summary(surv_sel_dis)$coefficients

```

Selective disappearance did not explain the observed pattern of declining offspring survival with maternal age. The coefficient for longevity was estimated at `r surv_long_coef`, which was not significantly different than 0 ($p$ = `r surv_long_p`). The predicted breeding probabilities for seals with longevity of 5, 10, and 17 years are shown in @fig-sel-dis-h2.

```{r}
#| label: fig-sel-dis-h2
#| fig-cap: Longevity did not explain changes in offspring survival or recruitment with maternal age. Predicted offspring survival and recruitment probabilities for seals with longevity of 5, 10, and 17 years shown with solid, dotted, and dashed lines, respectively. 95% confidence intervals shown in shaded regions.

surv_pred_long <- ggpredict(
  surv_sel_dis, 
  terms = c("age10 [all]", "age_cat", "longevity [5,10,17]"),
  type = "fixed",
  interval = "confidence"
) %>% 
  as_tibble() %>% 
  mutate(age = x * 10,
         age_cat = group,
         longevity = facet,
         longevity_fct = factor(longevity)) %>% 
  filter((age_cat == "Young" & age < age_senesce) |
           (age_cat == "Old" & age >= age_senesce),
         age <= 20)
  
ggplot(surv_pred_long, aes(age, predicted)) +
  geom_ribbon(aes(fill = age_cat, 
                  group = interaction(age_cat, longevity_fct),
                  ymin = conf.low, 
                  ymax = conf.high), 
              alpha = 0.2) +
  geom_line(aes(color = age_cat, linetype = longevity_fct)) +
  geom_vline(xintercept = age_senesce - 0.5, linetype = "dashed") +
  scale_y_continuous("Offspring survival", 
                     labels = scales::percent,
                     limits = c(0, 0.62)) +
  scale_color_manual(values = c("#7fbc41", "#de77ae")) +
  scale_fill_manual(values = c("#7fbc41", "#de77ae")) +
  labs(x = "Age (years)") +
  theme(legend.position = "none")

```
